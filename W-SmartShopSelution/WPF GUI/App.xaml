<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WPF_GUI"
             xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf" x:Class="WPF_GUI.App"
             StartupUri="Login/LoginForm.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Indigo.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
                <!-- primary color -->
                <ResourceDictionary>
                    <!-- include your primary palette -->
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Teal.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                    <!--
include three hues from the primary palette (and the associated forecolours).
Do not rename, keep in sequence; light to dark.
-->
                    <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="{StaticResource Primary100}"/>
                    <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="{StaticResource Primary100Foreground}"/>
                    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="{StaticResource Primary500}"/>
                    <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="{StaticResource Primary500Foreground}"/>
                    <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="{StaticResource Primary700}"/>
                    <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="{StaticResource Primary700Foreground}"/>

                    <!-- MAHAPPS BRUSHES -->
                    <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource Primary700}" />
                    <SolidColorBrush x:Key="AccentColorBrush" Color="{StaticResource Primary500}" />
                    <SolidColorBrush x:Key="AccentColorBrush2" Color="{StaticResource Primary400}" />
                    <SolidColorBrush x:Key="AccentColorBrush3" Color="{StaticResource Primary300}" />
                    <SolidColorBrush x:Key="AccentColorBrush4" Color="{StaticResource Primary200}" />
                    <SolidColorBrush x:Key="WindowTitleColorBrush" Color="{StaticResource Primary700}"/>
                    <SolidColorBrush x:Key="AccentSelectedColorBrush" Color="{StaticResource Primary500Foreground}" />

                    <LinearGradientBrush x:Key="ProgressBrush" EndPoint="0.001,0.5" StartPoint="1.002,0.5">
                        <GradientStop Color="{StaticResource Primary700}" Offset="0" />
                        <GradientStop Color="{StaticResource Primary300}" Offset="1" />
                    </LinearGradientBrush>
                    <SolidColorBrush x:Key="CheckmarkFill" Color="{StaticResource Primary500}" />
                    <SolidColorBrush x:Key="RightArrowFill" Color="{StaticResource Primary500}" />
                    <SolidColorBrush x:Key="IdealForegroundColorBrush" Color="{StaticResource Primary500Foreground}" />
                    <SolidColorBrush x:Key="IdealForegroundDisabledBrush" Color="{StaticResource Primary500}" Opacity="0.4" />

                </ResourceDictionary>
                <!-- secondary colour -->
                <ResourceDictionary>
                    <!-- include your secondary pallette -->
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Amber.xaml" />
                    </ResourceDictionary.MergedDictionaries>

                    <!-- include a single secondary accent color (and the associated forecolour) -->
                    <SolidColorBrush x:Key="SecondaryAccentBrush" Color="{StaticResource Accent200}"/>
                    <SolidColorBrush x:Key="SecondaryAccentForegroundBrush" Color="{StaticResource Accent200Foreground}"/>
                </ResourceDictionary>

                <!-- Include the Dragablz Material Design style -->
                <ResourceDictionary Source="pack://application:,,,/Dragablz;component/Themes/materialdesign.xaml"/>

            </ResourceDictionary.MergedDictionaries>

            <!-- tell Dragablz tab control to use the Material Design theme -->
            <Style TargetType="{x:Type dragablz:TabablzControl}" BasedOn="{StaticResource MaterialDesignTabablzControlStyle}" />
            <Style x:Key="SfMultiColumnDropDownControlStyle1" TargetType="{x:Type syncfusion:SfMultiColumnDropDownControl}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderBrush" Value="DarkGray"/>
                <Setter Property="PopupBorderBrush" Value="Gray"/>
                <Setter Property="PopupBorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="PopupDropDownGridBackground" Value="White"/>
                <Setter Property="PopupBackground" Value="White"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type syncfusion:SfMultiColumnDropDownControl}">
                            <Border x:Name="PART_RootBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard BeginTime="0">
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="PART_RootBorder">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <SolidColorBrush Color="Gray"/>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid x:Name="PART_RootGrid" SnapsToDevicePixels="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Popup x:Name="PART_Popup" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" MaxWidth="{TemplateBinding PopupMaxWidth}" MaxHeight="{TemplateBinding PopupMaxHeight}" MinWidth="{TemplateBinding PopupMinWidth}" MinHeight="{TemplateBinding PopupMinHeight}">
                                        <Popup.Style>
                                            <Style TargetType="{x:Type Popup}">
                                                <Setter Property="AllowsTransparency" Value="False"/>
                                                <Setter Property="Placement" Value="Absolute"/>
                                                <Setter Property="StaysOpen" Value="False"/>
                                                <Setter Property="PopupAnimation" Value="Slide"/>
                                            </Style>
                                        </Popup.Style>
                                        <Border x:Name="PART_PopupBorder" BorderBrush="{TemplateBinding PopupBorderBrush}" BorderThickness="{TemplateBinding PopupBorderThickness}">
                                            <Grid Background="{TemplateBinding PopupBackground}">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <ContentControl x:Name="PART_PopupContent">
                                                    <syncfusion:SfDataGrid x:Name="PART_SfDataGrid" AllowEditing="False" AllowGrouping="False" AllowDraggingColumns="False"  BorderBrush="LightGray" AutoGenerateColumns="{TemplateBinding AutoGenerateColumns}" AllowResizingColumns="False" AllowFiltering="True" AllowRowHoverHighlighting="True" Background="{TemplateBinding PopupDropDownGridBackground}" ColumnSizer="{TemplateBinding GridColumnSizer}" FocusVisualStyle="{x:Null}" Focusable="False" ItemsSource="{TemplateBinding ItemsSource}" KeyColumn="{x:Null}" LostFocusBehavior="EndEditCurrentCell" Margin="0" NavigationMode="Row" RowDragDropController="{x:Null}" SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ShowBusyIndicator="False"/>
                                                </ContentControl>
                                                <Grid Grid.Row="1" Visibility="{TemplateBinding ResizingThumbVisibility}">
                                                    <Thumb x:Name="PART_ThumbGripper" Cursor="SizeNWSE" HorizontalAlignment="Right">
                                                        <Thumb.Template>
                                                            <ControlTemplate>
                                                                <Grid Background="Transparent">
                                                                    <Path Data="M36.396,36.017L47.901,36.017 47.901,47.521999 36.396,47.521999z M18.198,36.017L29.716,36.017 29.716,47.521999 18.198,47.521999z M0,36.017L11.511999,36.017 11.511999,47.521999 0,47.521999z M36.396,18.191001L47.901,18.191001 47.901,29.696 36.396,29.696z M18.198,18.191L29.716,18.191 29.716,29.696 18.198,29.696z M36.396,0L47.901,0 47.901,11.512 36.396,11.512z" Fill="#FF727272" Height="12" Stretch="Fill" Width="12"/>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Thumb.Template>
                                                    </Thumb>
                                                </Grid>
                                            </Grid>
                                        </Border>
                                    </Popup>
                                    <TextBox x:Name="PART_TextBox" Background="{TemplateBinding Background}" Grid.Column="0" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FlowDirection="{TemplateBinding FlowDirection}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" IsReadOnly="{TemplateBinding ReadOnly}" Padding="{TemplateBinding Padding}" TextAlignment="{TemplateBinding TextAlignment}" Text="{Binding Text, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" TabIndex="{TemplateBinding TabIndex}">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="TextWrapping" Value="NoWrap"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="IsReadOnlyCaretVisible" Value="True"/>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <Border BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed"  Grid.Column="0" Margin="0,0,298,0">
                                        <ToggleButton x:Name="PART_ToggleButton"   VerticalContentAlignment="Center">
                                            <ToggleButton.Style>
                                                <Style  TargetType="{x:Type ToggleButton}">
                                                    <Setter Property="ClickMode" Value="Release"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate>
                                                                <Border Background="White">
                                                                    <Grid>
                                                                        <Path Data="F1M10.6668,-9.99999999997669E-05L6.0008,4.6669 1.3328,-9.99999999997669E-05 -0.000199999999999534,1.3339 6.0008,7.3329 11.9998,1.3339z" Fill="{TemplateBinding Foreground}" Height="12" Margin="4" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" Width="12"/>
                                                                    </Grid>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                    </Border>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
